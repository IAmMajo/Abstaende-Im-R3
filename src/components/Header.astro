---
import checkIcon from "@material-symbols/svg-400/outlined/check.svg?raw";
import codeIcon from "@material-symbols/svg-400/outlined/code.svg?raw";
import paletteIcon from "@material-symbols/svg-400/outlined/palette.svg?raw";
import { MdIcon } from "@material/web/icon/icon";
import { MdStandardIconButton } from "@material/web/iconbutton/standard-icon-button";
import { MdMenu } from "@material/web/menu/menu";
import { MdMenuItem } from "@material/web/menu/menu-item";

const design = Astro.cookies.get("design").value;
---

<header class="surface">
  <h1 class="title-large">Abstände im R³</h1>
  {
    (
      // @ts-expect-error
      <MdStandardIconButton href="https://github.com/IAmMajo/Abstaende-Im-R3">
        <MdIcon set:html={codeIcon} />
      </MdStandardIconButton>
    )
  }
  <div>
    {
      (
        // @ts-expect-error
        <MdStandardIconButton id="design-button">
          <MdIcon set:html={paletteIcon} />
        </MdStandardIconButton>
      )
    }
    <MdMenu client:only="lit">
      {
        (
          // @ts-expect-error
          <MdMenuItem headline="Systemeinstellung" client:only="lit">
            <MdIcon
              class:list={[{ invisible: design }]}
              slot="start"
              set:html={checkIcon}
              client:only="lit"
            />
          </MdMenuItem>
        )
      }
      {
        (
          // @ts-expect-error
          <MdMenuItem headline="Hell" data-value="light" client:only="lit">
            {
              <MdIcon
                class:list={[{ invisible: design !== "light" }]}
                slot="start"
                set:html={checkIcon}
                client:only="lit"
              />
            }
          </MdMenuItem>
        )
      }
      {
        (
          // @ts-expect-error
          <MdMenuItem headline="Dunkel" data-value="dark" client:only="lit">
            {
              <MdIcon
                class:list={[{ invisible: design !== "dark" }]}
                slot="start"
                set:html={checkIcon}
                client:only="lit"
              />
            }
          </MdMenuItem>
        )
      }
    </MdMenu>
  </div>
</header>
<style>
  header {
    height: 64px;
    display: flex;
    align-items: center;
    padding: 0 8px 0 16px;
    width: 100%;
    box-sizing: border-box;
    gap: 8px;
    transition: 0.5s cubic-bezier(0.2, 0, 0, 1);
    position: fixed;
    top: 0;
    left: 0;
    z-index: 2;
  }

  h1 {
    flex: 1;
  }

  div {
    position: relative;
  }
</style>
<script>
  import type { MdIcon } from "@material/web/icon/icon";
  import type { MdMenu } from "@material/web/menu/menu";
  import type { MdMenuItem } from "@material/web/menu/menu-item";

  const designButton = document.getElementById("design-button")!;
  designButton.addEventListener("click", () => {
    const menu = document.querySelector<MdMenu>("md-menu");
    if (menu) {
      menu.anchor = designButton;
      menu.show();
    }
  });

  const bodyClasses = document.body.classList;
  const colorScheme = document.querySelector<HTMLMetaElement>(
    '[name="color-scheme"]'
  )!;
  addEventListener("close-menu", (event) => {
    document
      .querySelectorAll<MdIcon>("md-menu-item md-icon")
      .forEach((icon) => icon.classList.add("invisible"));
    bodyClasses.remove("light", "dark");
    const target = event.target as MdMenuItem;
    const design = target.dataset.value;
    if (!design) {
      document
        .querySelector<MdIcon>("md-menu-item md-icon")!
        .classList.remove("invisible");
      colorScheme.content = "light dark";
      document.cookie = "design=;max-age=0";
      return;
    }
    bodyClasses.add(design);
    target.querySelector<MdIcon>("md-icon")!.classList.remove("invisible");
    colorScheme.content = design;
    document.cookie =
      "design=" + design + ";max-age=34560000;path=/;samesite=lax;secure";
  });

  const headerClasses = document.querySelector("header")!.classList;
  addEventListener("scroll", () => {
    if (scrollY === 0) {
      headerClasses.remove("surface-container");
      return;
    }
    headerClasses.add("surface-container");
  });
</script>
